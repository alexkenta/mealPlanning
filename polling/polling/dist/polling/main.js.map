{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/log-reg/log-reg.component.css","webpack:///./src/app/log-reg/log-reg.component.html","webpack:///./src/app/log-reg/log-reg.component.ts","webpack:///./src/app/polls.service.ts","webpack:///./src/app/polls/poll-create/poll-create.component.css","webpack:///./src/app/polls/poll-create/poll-create.component.html","webpack:///./src/app/polls/poll-create/poll-create.component.ts","webpack:///./src/app/polls/poll-view/poll-view.component.css","webpack:///./src/app/polls/poll-view/poll-view.component.html","webpack:///./src/app/polls/poll-view/poll-view.component.ts","webpack:///./src/app/polls/polls-all/polls-all.component.css","webpack:///./src/app/polls/polls-all/polls-all.component.html","webpack:///./src/app/polls/polls-all/polls-all.component.ts","webpack:///./src/app/polls/polls.component.css","webpack:///./src/app/polls/polls.component.html","webpack:///./src/app/polls/polls.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LogRegComponent } from './log-reg/log-reg.component';\nimport { PollsComponent } from './polls/polls.component';\nimport { PollsAllComponent } from './polls/polls-all/polls-all.component';\nimport { PollCreateComponent } from './polls/poll-create/poll-create.component';\nimport { PollViewComponent } from './polls/poll-view/poll-view.component';\n\nconst routes: Routes = [\n  {path: '', component: LogRegComponent},\n  {path: 'polls', component: PollsComponent, children:[\n    {path: '', component: PollsAllComponent},\n    {path: 'create', component: PollCreateComponent},\n    {path: 'poll/:pollId', component: PollViewComponent}\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"#content {\\r\\n    padding: 20px;\\r\\n}\"","module.exports = \"<h1>Polling</h1>\\n\\n<div id=\\\"content\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LogRegComponent } from './log-reg/log-reg.component';\nimport { PollsComponent } from './polls/polls.component';\nimport { PollCreateComponent } from './polls/poll-create/poll-create.component';\nimport { PollViewComponent } from './polls/poll-view/poll-view.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { CookieModule } from 'ngx-cookie';\n\nimport { AuthService } from './auth.service';\nimport { PollsService } from './polls.service';\nimport { PollsAllComponent } from './polls/polls-all/polls-all.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LogRegComponent,\n    PollsComponent,\n    PollCreateComponent,\n    PollViewComponent,\n    PollsAllComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    CookieModule.forRoot(),\n  ],\n  providers: [AuthService, PollsService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient,\n              private cookieService: CookieService\n            ) { }\n\n    logReg(user){\n      console.log(\"AuthService>getting User\", user)\n      return this.http.post('/logReg', user);\n    }\n\n    getUser(userId){\n      console.log(\"getting this user\", userId)\n      return this.http.get(`/getUser/${userId}`);\n    }\n\n    logout(){\n      return this.http.delete('/logout');\n    }\n    \n    isAuthed():boolean {\n      const expired = parseInt(this.cookieService.get('expiration'), 10);\n      const userID = this.cookieService.get('userID')\n      const session = this.cookieService.get('session');\n  \n      return session && expired && userID && expired > Date.now();\n    }\n}\n\n","module.exports = \"\"","module.exports = \"<h3>Login/Register</h3>\\n<form #logRegForm=\\\"ngForm\\\" name=\\\"logRegForm\\\" (submit)=\\\"logReg()\\\">\\n  <label for=\\\"name\\\">Name: </label>\\n  <input type=\\\"text\\\" name=\\\"name\\\"\\n  required\\n  minlength=\\\"3\\\"\\n  [(ngModel)] = \\\"user.name\\\"\\n  #name = \\\"ngModel\\\"\\n  >\\n  <br>\\n  <input type=\\\"submit\\\" value=\\\"Enter\\\">\\n</form>\\n{{user | json}}\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-log-reg',\n  templateUrl: './log-reg.component.html',\n  styleUrls: ['./log-reg.component.css']\n})\nexport class LogRegComponent implements OnInit {\n\n  user = {\n    name: '',\n  }\n\n  constructor(private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  logReg(){\n    console.log(this.user.name);\n    this.authService.logReg(this.user)\n    .subscribe(\n      (data) => {\n        console.log(\"data from logRegComponent\", data)\n        this.router.navigateByUrl('/polls')\n        \n      },\n      (err) => {\n\n      }\n    )\n    this.user.name = '';\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PollsService {\n\n  constructor(private http: HttpClient) { }\n\n  createPoll(poll){\n    return this.http.post('/create', poll)\n  }\n\n  getAll(){\n    return this.http.get('/allPolls')\n  }\n\n  getOne(pollId){\n    console.log(\"service pollId\", pollId)\n    return this.http.get(`/getOne/${pollId}`)\n  }\n\n  upVote(pollId, data){\n    console.log(\"data>\",pollId, data)\n    return this.http.put(`/vote/${pollId}/${data}`, pollId, data)\n  }\n\n}\n\n","module.exports = \"label, input {\\r\\n    display: block;\\r\\n}\"","module.exports = \"<h1>Create a poll!</h1>\\n<form name=\\\"newPollForm\\\" #newPollForm=\\\"ngForm\\\" (submit)=\\\"createPoll()\\\">\\n  <label for=\\\"question\\\">What's the question?</label>\\n  <input type=\\\"text\\\" name=\\\"question\\\"\\n  required\\n  minlength=\\\"10\\\"\\n  [(ngModel)]=\\\"newPoll.question\\\"\\n  #question=\\\"ngModel\\\"\\n  >\\n  \\n\\n  <label for=\\\"optOne\\\">1st Option</label>\\n  <input type=\\\"text\\\" name=\\\"optOne\\\"\\n  required\\n  minlength=\\\"3\\\"\\n  [(ngModel)]=\\\"newPoll.optOne\\\"\\n  #optOne=\\\"ngModel\\\"\\n  >\\n\\n  <label for=\\\"optTwo\\\">2nd Option</label>\\n  <input type=\\\"text\\\" name=\\\"optTwo\\\"\\n  required\\n  minlength=\\\"3\\\"\\n  [(ngModel)]=\\\"newPoll.optTwo\\\"\\n  #optTwo=\\\"ngModel\\\"\\n  >\\n\\n  <label for=\\\"optThree\\\">3rd Option</label>\\n  <input type=\\\"text\\\" name=\\\"optThree\\\"\\n  required\\n  minlength=\\\"3\\\"\\n  [(ngModel)]=\\\"newPoll.optThree\\\"\\n  #optThree=\\\"ngModel\\\"\\n  >\\n\\n  <label for=\\\"optFour\\\">4th Option</label>\\n  <input type=\\\"text\\\" name=\\\"optFour\\\"\\n  required\\n  minlength=\\\"3\\\"\\n  [(ngModel)]=\\\"newPoll.optFour\\\"\\n  #optFour=\\\"ngModel\\\"\\n  >\\n\\n  <input type=\\\"submit\\\" value=\\\"Submit poll\\\" >\\n\\n</form>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie';\nimport { AuthService } from '../../auth.service';\nimport { PollsService } from '../../polls.service'\n\n@Component({\n  selector: 'app-poll-create',\n  templateUrl: './poll-create.component.html',\n  styleUrls: ['./poll-create.component.css']\n})\nexport class PollCreateComponent implements OnInit {\n\n  thisUser = null;\n  currentUser = null;\n\n  newPoll:any = {\n    question: '',\n    optOne: '',\n    optTwo: '',\n    optThree: '',\n    optFour: '',\n    createdBy: null\n  }\n\n  constructor(private cookieService: CookieService,\n              private authservice: AuthService,\n              private pollsservice: PollsService) {\n\n                this.thisUser = this.cookieService.get('userID')\n\n    if(this.thisUser){\n      this.authservice.getUser(this.thisUser)\n      .subscribe(\n      (response) => {\n        console.log(\"NGONINIT plan component\", response)\n        this.currentUser = response\n        this.newPoll.createdBy = this.currentUser.name\n      },\n      (err) => {\n        console.log(\"error in subscribe on init\", err)\n      }\n      ) \n    }\n               }\n\n  ngOnInit() {\n    \n    \n  }\n\n  createPoll(){\n\n    console.log(\"create poll\")\n    console.log(\"this user\",this.thisUser)\n    console.log(\"current user\", this.currentUser)\n    console.log(this.newPoll)\n\n    this.pollsservice.createPoll(this.newPoll)\n    .subscribe(\n      (response) => {\n        console.log(\"NGONINIT plan component\", response)\n        this.currentUser = response\n      },\n      (err) => {\n        console.log(\"error in subscribe on init\", err)\n      }\n      ) \n\n   this.newPoll = {\n     question: '',\n     optOne: '',\n     optTwo: '',\n     optThree: '',\n     optFour: '',\n\n   }\n\n\n  }\n\n    \n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table\\\" *ngIf=\\\"thisPoll\\\">\\n  <thead>\\n    <th>{{thisPoll.question}}</th>\\n    <th>score</th>\\n    <th>upvote?</th>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <td>{{thisPoll.optOne.response}}</td>\\n      <td>{{thisPoll.optOne.score}}</td>\\n      <td><button (click)=\\\"vote('optOne')\\\">vote</button></td>\\n    </tr>\\n    <tr>\\n      <td>{{thisPoll.optTwo.response}}</td>\\n      <td>{{thisPoll.optTwo.score}}</td>\\n      <td><button (click)=\\\"vote('optTwo')\\\">vote</button></td>\\n    </tr>\\n    <tr>\\n      <td>{{thisPoll.optThree.response}}</td>\\n      <td>{{thisPoll.optThree.score}}</td>\\n      <td><button (click)=\\\"vote('optThree')\\\">vote</button></td>\\n    </tr>\\n    <tr>\\n      <td>{{thisPoll.optFour.response}}</td>\\n      <td>{{thisPoll.optFour.score}}</td>\\n      <td><button (click)=\\\"vote('optFour')\\\">vote</button></td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<h1>{{thisPoll | json}}</h1>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PollsService } from '../../polls.service'\n\n@Component({\n  selector: 'app-poll-view',\n  templateUrl: './poll-view.component.html',\n  styleUrls: ['./poll-view.component.css']\n})\nexport class PollViewComponent implements OnInit {\n\n  thisPollId\n  thisPoll\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private pollsService: PollsService) {\n\n    this.activatedRoute.paramMap.subscribe( params => {\n      console.log(\"id in constructor\", params.get('pollId'))\n      this.thisPollId = params.get('pollId')\n })\n   }\n\n  ngOnInit() {\n    console.log(\"get the id!!\",this.thisPollId)\n    this.pollsService.getOne(this.thisPollId)\n    .subscribe(\n      \n      (poll) => {\n        console.log(\"poll\", poll)\n        this.thisPoll = poll;\n      }\n    )\n    \n  }\n\n  vote(data){\n    console.log(data, this.thisPollId)\n    this.pollsService.upVote(data, this.thisPollId)\n    .subscribe(\n      //dostuff here\n    )\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>ALL POLLS WILL BE DISPLAYED HERE</h1>\\r\\n<input type=\\\"text\\\" name=\\\"\\\" placeholder=\\\"SEARCH POLLS HERE\\\" (keyup)=\\\"searchPolls()\\\">\\r\\n<br>\\r\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <th>Question</th>\\r\\n        <th>Score</th>\\r\\n        <th>Created By</th>\\r\\n        <th>Actions</th>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let poll of allPolls\\\">\\r\\n            <td><a [routerLink]=\\\"['poll', poll._id]\\\">{{poll.question}}</a></td>\\r\\n            <td>{{poll.score}}</td>\\r\\n            <td>{{poll.createdBy}}</td>\\r\\n            <td>delete button here</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PollsService } from '../../polls.service';\n\n@Component({\n  selector: 'app-polls-all',\n  templateUrl: './polls-all.component.html',\n  styleUrls: ['./polls-all.component.css']\n})\nexport class PollsAllComponent implements OnInit {\n  allPolls\n  constructor(private pollsService: PollsService) { }\n\n  ngOnInit() {\n    this.pollsService.getAll()\n    .subscribe(\n      (result) => {\n        this.allPolls = result;\n      }\n    )\n  }\n\n  searchPolls(){\n    console.log(\"keypress up\")\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p *ngIf=\\\"currentUser\\\">logged in as ...{{currentUser.name}}</p>\\n<button (click)=\\\"logout()\\\">logout</button> <button [routerLink]=\\\"['create']\\\">create poll</button>\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-polls',\n  templateUrl: './polls.component.html',\n  styleUrls: ['./polls.component.css']\n})\nexport class PollsComponent implements OnInit {\n\n  thisUser\n  currentUser\n\n  constructor(private cookieService: CookieService,\n              private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n\n    this.thisUser = this.cookieService.get('userID')\n\n    if(this.thisUser){\n      // this.mealPlanService.getUser(this.thisUser)\n      this.authService.getUser(this.thisUser)\n      .subscribe(\n      (response) => {\n        console.log(\"should be actual user object\", response)\n        this.currentUser = response\n      },\n      (err) => {\n        console.log(\"error in subscribe on init\", err)\n      }\n      ) \n  }\n\n  }\n\n  logout(){\n    this.authService.logout().subscribe();\n    this.router.navigateByUrl('/');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}