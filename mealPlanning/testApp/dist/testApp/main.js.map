{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/log-reg/log-reg.component.css","webpack:///./src/app/log-reg/log-reg.component.html","webpack:///./src/app/log-reg/log-reg.component.ts","webpack:///./src/app/meal-planning.service.ts","webpack:///./src/app/plans/plans.component.css","webpack:///./src/app/plans/plans.component.html","webpack:///./src/app/plans/plans.component.ts","webpack:///./src/app/recipes/add-recipe/add-recipe.component.css","webpack:///./src/app/recipes/add-recipe/add-recipe.component.html","webpack:///./src/app/recipes/add-recipe/add-recipe.component.ts","webpack:///./src/app/recipes/recipes.component.css","webpack:///./src/app/recipes/recipes.component.html","webpack:///./src/app/recipes/recipes.component.ts","webpack:///./src/app/recipes/view-recipe/view-recipe.component.css","webpack:///./src/app/recipes/view-recipe/view-recipe.component.html","webpack:///./src/app/recipes/view-recipe/view-recipe.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { PlansComponent } from '../app/plans/plans.component'\nimport { RecipesComponent } from '../app/recipes/recipes.component'\nimport { AddRecipeComponent } from '../app/recipes/add-recipe/add-recipe.component';\nimport { ViewRecipeComponent } from '../app/recipes/view-recipe/view-recipe.component';\nimport { LogRegComponent } from '../app/log-reg/log-reg.component'\n\nconst routes: Routes = [\n  {path: '', component: LogRegComponent},\n  {path: 'recipes', component: RecipesComponent, children: [\n    {path: '', component: AddRecipeComponent},\n    {path: 'add', component: AddRecipeComponent},\n    {path: 'view/:id', component: ViewRecipeComponent}\n  ]},\n  {path: 'plans', component: PlansComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".mainWrapper {\\r\\n    background-image: url(https://images.pexels.com/photos/349609/pexels-photo-349609.jpeg);\\r\\n    /* background-repeat: no-repeat; */\\r\\n    background-size: cover;\\r\\n    margin-top: 20px;\\r\\n}\\r\\nh1 {\\r\\n    text-align: center;\\r\\n    color: #4F8ABE;\\r\\n    font-family: 'Righteous', cursive;\\r\\n    font-size: 65px;\\r\\n}\\r\\n#mainContent {\\r\\n    min-height: 300px;\\r\\n    border: solid 2px gray;\\r\\n    padding: 10px;\\r\\n    background-color: white;\\r\\n    opacity: 0.85;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n#nav {\\r\\n    margin: auto;\\r\\n}\\r\\na {\\r\\n    color: #4F8ABE;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container mainWrapper\\\">\\n  <h1>mealPlan</h1>\\n  <hr>\\n  <div id=\\\"nav\\\">\\n    <a [routerLink]=\\\"['/']\\\">home | </a>\\n    <a [routerLink]=\\\"['/recipes']\\\">recipes | </a>\\n    <a [routerLink]=\\\"['plans']\\\">meal plans | </a>\\n    <a (click)=\\\"logout()\\\">logout</a>\\n  </div>\\n  <div id=\\\"mainContent\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router'\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'app';\n\n  constructor(private authService: AuthService,\n              private router: Router) {}\n\n  logout(){\n    this.authService.logout().subscribe()\n    this.router.navigate(['/'])\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MealPlanningService } from './meal-planning.service';\nimport { CookieModule } from 'ngx-cookie'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { PlansComponent } from './plans/plans.component';\nimport { ViewRecipeComponent } from './recipes/view-recipe/view-recipe.component';\nimport { AddRecipeComponent } from './recipes/add-recipe/add-recipe.component';\nimport { LogRegComponent } from './log-reg/log-reg.component';\nimport { AuthService } from './auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecipesComponent,\n    PlansComponent,\n    ViewRecipeComponent,\n    AddRecipeComponent,\n    LogRegComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CookieModule.forRoot()\n  ],\n  providers: [MealPlanningService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  \n\n  constructor(private http: HttpClient, private cookieService: CookieService) { }\n\n  login(user) {\n    return this.http.post('/login', user);\n  }\n\n  register(user){\n    return this.http.post('/register', user);\n  }\n\n  logout(){\n    return this.http.delete('/logout');\n  }\n  isAuthed():boolean {\n    const expired = parseInt(this.cookieService.get('expiration'), 10);\n    const userID = this.cookieService.get('userID')\n    const session = this.cookieService.get('session');\n\n    return session && expired && userID && expired > Date.now();\n  }\n}\n","module.exports = \"label {\\r\\n    width: 150px;\\r\\n}\\r\\n\\r\\n.error {\\r\\n    font-size: 80%;\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <h1>Login</h1>\\n      <form #login=\\\"ngForm\\\" (submit)=\\\"onLogin(login.value)\\\">\\n        <label for=\\\"email\\\">Email: </label>\\n        <input type=\\\"text\\\" name=\\\"email\\\"\\n        required\\n        [(ngModel)]=\\\"user.email\\\"\\n        #email=\\\"ngModel\\\"\\n        >\\n        <br>\\n        <label for=\\\"password\\\">Password: </label>\\n        <input type=\\\"password\\\" name=\\\"password\\\"\\n        required\\n        [(ngModel)]=\\\"user.password\\\"\\n        #password=\\\"ngModel\\\"\\n        >\\n        <br>\\n        <p *ngIf=\\\"loginFailed\\\" class=\\\"error\\\">Invalid email/password</p>\\n        <input class=\\\"btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\">\\n      </form>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <h1>Registration</h1>\\n      <form #register=\\\"ngForm\\\" (submit)=\\\"onRegister()\\\">\\n        <label for=\\\"email\\\">Email: </label>\\n        <input type=\\\"text\\\" name=\\\"email\\\"\\n        required\\n        [(ngModel)]=\\\"newUser.email\\\"\\n        #email=\\\"ngModel\\\"\\n        >\\n        <p *ngIf=\\\"email.touched && email.invalid\\\" class=\\\"error\\\">Please enter a valid email</p>\\n        <br>\\n        <label for=\\\"password\\\">Password: </label>\\n        <input type=\\\"password\\\" name=\\\"password\\\"\\n        required\\n        minlength=\\\"7\\\"\\n        [(ngModel)]=\\\"newUser.password\\\"\\n        #password=\\\"ngModel\\\"\\n        >\\n        <p *ngIf=\\\"password.touched && password.invalid\\\" class=\\\"error\\\">Password must be atleast 7 characters</p>\\n        <br>\\n        <label for=\\\"pwconfirm\\\">Confirm Password: </label>\\n        <input type=\\\"password\\\" name=\\\"pwconfirm\\\"\\n        required\\n        [(ngModel)]=\\\"newUser.pwconfirm\\\"\\n        #pwconfirm = \\\"ngModel\\\"\\n        [pattern] = 'password.value'>\\n        <br>\\n        <p *ngIf=\\\"pwconfirm.touched && pwconfirm.invalid\\\" class=\\\"error\\\">Confirm password must match password</p>\\n        <input [disabled]=\\\"!register.valid\\\" class=\\\"btn-primary\\\" type=\\\"submit\\\" value=\\\"Register\\\">\\n      </form>\\n    </div>\\n    <div class=\\\"col-md-4\\\"></div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service'\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-log-reg',\n  templateUrl: './log-reg.component.html',\n  styleUrls: ['./log-reg.component.css']\n})\nexport class LogRegComponent implements OnInit {\n  newUser:any = {\n    email: '',\n    password: '',\n    pwconfirm: '',\n  }\n\n  user:any = {\n    email: '',\n    password: ''\n  }\n\n  registrationErrors: string[] = [];\n  errors: string[] = []\n  constructor(private auth: AuthService, private router: Router) { }\n\n loginFailed = false;\n\n  onLogin(user){\n    console.log(user)\n    this.auth.login(user)\n      .subscribe(() => {\n        this.router.navigateByUrl('plans');\n      }, error => {\n        console.log(\"logRegComp > Login\", error)\n        this.loginFailed = true;\n      })\n  }\n\n  onRegister(){\n    console.log(\"registering user\", this.newUser )\n    this.auth.register(this.newUser)\n      .subscribe(() => {\n        this.router.navigateByUrl('plans')\n      }, error => {\n        console.log(\"LogRegComponent > Register\",error)\n      })\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MealPlanningService {\n\n  subject:any = new BehaviorSubject([]);\n\n  constructor(private http: HttpClient) { }\n  \n  getAllRecipes(){\n    this.http.get('/allRecipes')\n    .subscribe(\n      (response) => {\n        console.log(\"success\", response);\n        this.subject.next(response);\n      },\n      (err) => {\n        console.log(\"error\")\n      }\n    )\n  }\n\n  addToPlan(recipeId, dayOfWeek, userId){\n    console.log(\"MP Service > add to plan > recipeId, dow, uId\", recipeId, dayOfWeek, userId)\n    return this.http.put('/addPlan/'+recipeId+'/'+dayOfWeek+'/'+userId, recipeId, dayOfWeek)\n  }\n\n  removeFromPlan(user, day){\n    console.log(\"MP Service > removeFromPlan\")\n    return this.http.put('/removeFromPlan/'+user+'/'+day, day)\n  }\n\n  getOneRecipe(id){\n    console.log(\"get one recipe\", id)\n    return this.http.get('/getOneRecipe/'+id)\n  }\n\n  addNewRecipe(recipe){\n    console.log(\"hitting SERVICE > ADD NEW RECIPE\")\n    return this.http.post('/addNewRecipe', recipe)  \n  }\n\n  getUser(userID){\n    console.log(\"MEAL SERVICE > userId\", userID)\n    return this.http.get('/thisUser/'+userID)\n  }\n}","module.exports = \"th {\\r\\n    /* width: 150px; */\\r\\n    text-align: center;\\r\\n}\\r\\ntd {\\r\\n    text-align: center;\\r\\n}\\r\\nli {\\r\\n    list-style-type: none;\\r\\n    text-align: left;\\r\\n}\\r\\n.removeButton {\\r\\n    font-size: 50%; margin-left: 5px;\\r\\n}\"","module.exports = \"<p *ngIf=\\\"currentUser\\\">you are logged in as {{currentUser.email}}</p>\\n<p *ngIf=\\\"!currentUser\\\">you must be logged in to start a meal plan</p>\\n\\n<table class=\\\"table\\\">\\n  <thead>\\n    <th>Monday</th>\\n    <th>Tuesday</th>\\n    <th>Wednesday</th>\\n    <th>Thursday</th>\\n    <th>Friday</th>\\n    <th>Saturday</th>\\n    <th>Sunday</th>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <td *ngIf=\\\"currentUser.mon\\\">{{currentUser.mon.name}} \\n        <button class=\\\"btn-danger removeButton\\\" (click)=\\\"removeFromPlan('mon')\\\">remove</button>\\n      </td>\\n      <td *ngIf=\\\"!currentUser.mon\\\">nothing yet</td>\\n        \\n      <td *ngIf=\\\"currentUser.tues\\\">{{currentUser.tues.name}} \\n        <button class=\\\"btn-danger removeButton\\\" (click)=\\\"removeFromPlan('tues')\\\">remove</button>\\n      </td>\\n      <td *ngIf=\\\"!currentUser.tues\\\">nothing yet</td>\\n      \\n      <td *ngIf=\\\"currentUser.wed\\\">{{currentUser.wed.name}}\\n          <button class=\\\"btn-danger removeButton\\\" (click)=\\\"removeFromPlan('wed')\\\">remove</button>\\n      </td>\\n      <td *ngIf=\\\"!currentUser.wed\\\">nothing yet</td>\\n      \\n      <td *ngIf=\\\"currentUser.thurs\\\">{{currentUser.thurs.name}}\\n          <button class=\\\"btn-danger removeButton\\\" (click)=\\\"removeFromPlan('thurs')\\\">remove</button>\\n      </td>\\n      <td *ngIf=\\\"!currentUser.thurs\\\">nothing yet</td>\\n\\n      <td *ngIf=\\\"currentUser.fri\\\">{{currentUser.fri.name}}\\n          <button class=\\\"btn-danger removeButton\\\" (click)=\\\"removeFromPlan('fri')\\\">remove</button>\\n      </td>\\n      <td *ngIf=\\\"!currentUser.fri\\\">nothing yet</td>\\n      \\n      <td *ngIf=\\\"currentUser.sat\\\">{{currentUser.sat.name}}\\n          <button class=\\\"btn-danger removeButton\\\" (click)=\\\"removeFromPlan('sat')\\\">remove</button>\\n      </td>\\n      <td *ngIf=\\\"!currentUser.sat\\\">nothing yet</td>\\n      \\n      <td *ngIf=\\\"currentUser.sun\\\">{{currentUser.sun.name}}\\n          <button class=\\\"btn-danger removeButton\\\" (click)=\\\"removeFromPlan('sun')\\\">remove</button>\\n      </td>   \\n      <td *ngIf=\\\"!currentUser.sun\\\">nothing yet</td>\\n         \\n    </tr>\\n    <tr>\\n      <td *ngIf=\\\"currentUser.mon\\\">\\n        <ul>\\n          <li *ngFor=\\\"let ingredient of currentUser.mon.ingredients\\\">{{ingredient}}</li>\\n        </ul>\\n      </td> \\n      <td *ngIf=\\\"!currentUser.mon\\\"></td>     \\n      <td *ngIf=\\\"currentUser.tues\\\">\\n        <ul>\\n          <li *ngFor=\\\"let ingredient of currentUser.tues.ingredients\\\">{{ingredient}}</li>\\n        </ul>\\n      </td> \\n      <td *ngIf=\\\"!currentUser.tues\\\"></td>      \\n      <td *ngIf=\\\"currentUser.wed\\\">\\n        <ul>\\n          <li *ngFor=\\\"let ingredient of currentUser.wed.ingredients\\\">{{ingredient}}</li>\\n        </ul>\\n      </td> \\n      <td *ngIf=\\\"!currentUser.wed\\\"></td>      \\n      <td *ngIf=\\\"currentUser.thurs\\\">\\n        <ul>\\n          <li *ngFor=\\\"let ingredient of currentUser.thurs.ingredients\\\">{{ingredient}}</li>\\n        </ul>\\n      </td> \\n      <td *ngIf=\\\"!currentUser.thurs\\\"></td>     \\n      <td *ngIf=\\\"currentUser.fri\\\">\\n        <ul>\\n          <li *ngFor=\\\"let ingredient of currentUser.fri.ingredients\\\">{{ingredient}}</li>\\n        </ul>\\n      </td> \\n      <td *ngIf=\\\"!currentUser.fri\\\"></td>     \\n      <td *ngIf=\\\"currentUser.sat\\\">\\n        <ul>\\n          <li *ngFor=\\\"let ingredient of currentUser.sat.ingredients\\\">{{ingredient}}</li>\\n        </ul>\\n      </td> \\n      <td *ngIf=\\\"!currentUser.sat\\\"></td>      \\n      <td *ngIf=\\\"currentUser.sun\\\">\\n        <ul>\\n          <li *ngFor=\\\"let ingredient of currentUser.sun.ingredients\\\">{{ingredient}}</li>\\n        </ul>\\n      </td> \\n      <td *ngIf=\\\"!currentUser.sun\\\"></td>      \\n      \\n    </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { MealPlanningService } from '../meal-planning.service'\nimport { CookieService } from 'ngx-cookie'\n\n\n\n@Component({\n  selector: 'app-plans',\n  templateUrl: './plans.component.html',\n  styleUrls: ['./plans.component.css']\n})\nexport class PlansComponent implements OnInit {\n  currentUser = null\n  thisUser = null\n  tues = {}\n\n  constructor(private mealPlanning: MealPlanningService,\n              private cookieService: CookieService) { }\n\n  ngOnInit() {\n    console.log(\"session\", this.cookieService.get('session'))\n    console.log(\"userId\", this.cookieService.get('userID'))\n    \n    this.thisUser = this.cookieService.get('userID')\n    if(this.thisUser){\n      this.mealPlanning.getUser(this.thisUser)\n      .subscribe(\n        (response) => {\n          console.log(\"thisUser\", this.thisUser)\n          console.log(\"currentUser\", this.currentUser)\n          console.log(\"NGONINIT plan component\", response)\n          this.currentUser = response\n        },\n        (err) => {\n          console.log(\"error in subscribe on init\", err)\n        }\n      )\n\n      // this.mealPlanning.getOneRecipe(this.currentUser.tues)\n      // .subscribe((response) => {this.tues = response}\n    // )\n  }\n  }\n\n  removeFromPlan(day){\n    console.log(\"remove this \", day, this.thisUser)\n    this.mealPlanning.removeFromPlan(this.thisUser, day)\n    .subscribe(\n      (res) => {\n        this.mealPlanning.getUser(this.thisUser)\n    .subscribe(\n      (response) => {\n        console.log(\"NGONINIT plan component\", response)\n        this.currentUser = response\n      },\n      (err) => {\n        console.log(\"error in subscribe on init\", err)\n      }\n    )\n      }\n    )\n    \n  }\n\n}\n","module.exports = \"label {\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\n.error {\\r\\n    font-size: 90%;\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n    display: inline-block;\\r\\n}\"","module.exports = \"  <h1>Add a recipe!</h1>\\n  <hr>\\n  <form name=\\\"addRecipeForm\\\" #addRecipeForm=\\\"ngForm\\\" (submit)=\\\"addNewRecipe()\\\">\\n    <label for=\\\"name\\\">Recipe Name: </label>\\n    <input type=\\\"text\\\" name=\\\"name\\\"\\n    required\\n    minlength=\\\"3\\\"\\n    [(ngModel)] = \\\"newRecipe.name\\\"\\n    #name = \\\"ngModel\\\"\\n    >\\n    <div class=\\\"error\\\" *ngIf=\\\"name.touched && name.invalid\\\">\\n      Recipe name must be atleast 3 characters\\n    </div>\\n    <br>\\n    <label for=\\\"difficulty\\\">Difficulty: </label>\\n    <select name=\\\"difficulty\\\" \\n    required\\n    [(ngModel)] = \\\"newRecipe.difficulty\\\"\\n    #difficulty = \\\"ngModel\\\"\\n    >\\n      <option value=\\\"1\\\">1</option>\\n      <option value=\\\"2\\\">2</option>\\n      <option value=\\\"3\\\">3</option>\\n      <option value=\\\"4\\\">4</option>\\n      <option value=\\\"5\\\">5</option>   \\n    </select>\\n    <div class=\\\"error\\\" *ngIf=\\\"difficulty.touched && difficulty.invalid\\\">\\n      Please select a difficulty\\n    </div>\\n    <br>\\n    <label for=\\\"ingredients\\\">Ingredients: </label>\\n    <input type=\\\"text\\\" name=\\\"ingredients\\\"\\n    required\\n    minlength=\\\"2\\\"\\n    [(ngModel)] = \\\"newRecipe.ingredients\\\"\\n    #ingredients = \\\"ngModel\\\"\\n    >\\n    <div class=\\\"error\\\" *ngIf=\\\"ingredients.touched && ingredients.invalid\\\">\\n      Please list some ingredients\\n    </div>\\n    <br>\\n    <br>\\n    <label for=\\\"method\\\" style=\\\"vertical-align: top;\\\">Method: </label>\\n    <textarea name=\\\"method\\\" cols=\\\"70\\\" rows=\\\"4\\\"\\n    required\\n    minlength=\\\"10\\\"\\n    [(ngModel)] = \\\"newRecipe.method\\\"\\n    #method = \\\"ngModel\\\"\\n    ></textarea>\\n    <div class=\\\"error\\\" *ngIf=\\\"method.touched && method.invalid\\\">\\n      Please write a method/instructions for your recipe\\n    </div>\\n    <br>\\n    <input [disabled]=\\\"!addRecipeForm.valid\\\" *ngIf=\\\"currentUser\\\" type=\\\"submit\\\" value=\\\"Add recipe!\\\" class=\\\"btn-primary\\\">\\n  </form>\\n  <p class=\\\"error\\\" *ngIf=\\\"!currentUser\\\">login to submit a recipe</p>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MealPlanningService } from '../../meal-planning.service'\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { CookieService } from 'ngx-cookie'\n\n\n@Component({\n  selector: 'app-add-recipe',\n  templateUrl: './add-recipe.component.html',\n  styleUrls: ['./add-recipe.component.css']\n})\nexport class AddRecipeComponent implements OnInit {\n\n  thisUser = null;\n  currentUser = null;\n  \n  newRecipe: any = {\n    name: '',\n    ingredients: '',\n    difficulty: null,\n    method: '',\n  }\n\n  constructor(private mealPlanningService: MealPlanningService, \n              private route: ActivatedRoute,\n              private cookieService: CookieService,\n              private router: Router) {\n      this.thisUser = this.cookieService.get('userID')\n\n      if(this.thisUser){\n        this.mealPlanningService.getUser(this.thisUser)\n        .subscribe(\n        (response) => {\n          console.log(\"NGONINIT plan component\", response)\n          this.currentUser = response\n        },\n        (err) => {\n          console.log(\"error in subscribe on init\", err)\n        }\n        ) \n      }\n               }\n\n  addNewRecipe(){\n    console.log(\"ADD RECIPE COMPONENT > clicking\")\n    this.mealPlanningService.addNewRecipe(this.newRecipe)\n    .subscribe(\n      (res) => {\n        console.log(\"ARCOMP > \", res)\n        this.mealPlanningService.getAllRecipes()\n      },\n      (err) => {\n        console.log(\"error\", err)\n      }\n    )\n  \n    this.newRecipe = {\n      name: '',\n      ingredients: '',\n      difficulty: null,\n      method: ''\n    }\n    this.router.navigate(['/recipes'])\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"a {\\r\\n    display: block;\\r\\n}\"","module.exports = \"<!-- <div class=\\\"container\\\"> -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-2\\\">\\n      <a [routerLink]=\\\"['add']\\\"><h2>Add a Recipe</h2></a>\\n      <h2>All Recipes</h2>\\n      <a [routerLink]=\\\"['view', recipe._id]\\\" *ngFor=\\\"let recipe of allRecipes\\\">{{ recipe.name | titlecase}}</a>\\n  </div>\\n  <div class=\\\"col-md-10\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n  </div>\\n<!-- </div> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MealPlanningService } from '../meal-planning.service'\n\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n  allRecipes:any = []\n\n  constructor(private mealPlanningService: MealPlanningService\n  ) {\n    this.mealPlanningService.subject.subscribe(\n      (recipes) => {\n        this.allRecipes = recipes;\n      }\n    )\n   }\n\n  ngOnInit() {\n    this.mealPlanningService.getAllRecipes()\n   \n  }\n\n}\n","module.exports = \".error {\\r\\n    font-size: 90%;\\r\\n    color: red;\\r\\n    font-weight: bold;\\r\\n}\"","module.exports = \"<div *ngIf='thisRecipe'>\\n    <div class=\\\"row\\\">\\n      <h1>{{thisRecipe.name | titlecase}}</h1>\\n      <h5 style=\\\"font-weight: bold;\\\">Difficulty: {{thisRecipe.difficulty}}</h5>\\n      <form (submit)=\\\"addToPlan()\\\">\\n        <label for=\\\"addToPlan\\\">Add to: </label>\\n        <select name=\\\"addToPlan\\\"\\n        required\\n        [(ngModel)] = \\\"dayOfWeek\\\"\\n        #dayOfWeekText = \\\"ngModel\\\"\\n        >\\n          <option value=\\\"mon\\\">Monday</option>\\n          <option value=\\\"tues\\\">Tuesday</option>\\n          <option value=\\\"wed\\\">Wednesday</option>\\n          <option value=\\\"thurs\\\">Thursday</option>\\n          <option value=\\\"fri\\\">Friday</option>\\n          <option value=\\\"sat\\\">Saturday</option>\\n          <option value=\\\"sun\\\">Sunday</option>      \\n        </select>\\n        <input *ngIf=\\\"currentUser\\\" type=\\\"submit\\\" value=\\\"Add to plan\\\" class=\\\"btn-primary\\\" >\\n      </form>\\n      <p *ngIf=\\\"!currentUser\\\" class=\\\"error\\\">login to create your meal plan</p>\\n    </div>\\n    <hr>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <h3><span style=\\\"font-size: 125%; font-weight: bold;\\\">Ingredients</span></h3>\\n          <ul>\\n            <li *ngFor=\\\"let ingredient of thisRecipe.ingredients\\\">{{ingredient}}</li>\\n          </ul>\\n      </div>  \\n      <div class=\\\"col-md-9\\\">\\n        <h3><span style=\\\"font-size: 125%; font-weight: bold;\\\">Method</span></h3>\\n        <p *ngFor=\\\"let step of thisRecipe.method\\\">{{step}}</p>\\n      </div>\\n    </div>  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MealPlanningService } from '../../meal-planning.service';\nimport { CookieService } from 'ngx-cookie'\n\n@Component({\n  selector: 'app-view-recipe',\n  templateUrl: './view-recipe.component.html',\n  styleUrls: ['./view-recipe.component.css']\n})\nexport class ViewRecipeComponent implements OnInit {\n\n  id = null;\n  thisRecipe \n  dayOfWeek\n  thisUser = null;\n  currentUser = null;\n\n  constructor(private route: ActivatedRoute,\n              private mealPlanService: MealPlanningService,\n              private cookieService: CookieService,\n              private router: Router) {\n\n      this.thisUser = this.cookieService.get('userID')\n      if(this.thisUser){\n        this.mealPlanService.getUser(this.thisUser)\n        .subscribe(\n        (response) => {\n          console.log(\"NGONINIT plan component\", response)\n          this.currentUser = response\n        },\n        (err) => {\n          console.log(\"error in subscribe on init\", err)\n        }\n        ) \n      }\n\n\n      this.route.paramMap.subscribe(\n      params => {\n        console.log(\"from params in constructor\", params.get('id'));\n        this.mealPlanService.getOneRecipe(params.get('id'))\n        .subscribe(recipeReturned =>{\n          this.thisRecipe = recipeReturned\n        })\n        this.id = params.get('id')\n      }\n    )\n   }\n\n  addToPlan(){\n    console.log(\"adding \", this.thisRecipe.name, \" to \", this.dayOfWeek, \" for \",this.currentUser.email )\n    this.mealPlanService.addToPlan(this.thisRecipe._id, this.dayOfWeek, this.currentUser._id)\n    .subscribe(\n      (response) => {\n        this.router.navigateByUrl('plans');\n      },\n      (err) => {\n        console.log(err)\n      }\n    )\n  }\n\n  ngOnInit() {\n    console.log(\"View Recipe comp\", this.id)\n    this.mealPlanService.getOneRecipe(this.id)\n    .subscribe(\n      (response) => {\n        console.log(\"NGONINIT VIEW RECIPE\", response)\n        this.thisRecipe = response\n      },\n      (err) => {\n        console.log(\"error in subscribe on init\", err)\n      }\n    )   \n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}